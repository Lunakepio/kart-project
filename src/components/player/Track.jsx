/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 --shadows .\track.glb 
Author: Mauro3D (https://sketchfab.com/maurogsw)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/track-5f5e9454fd59436e8d0dd38df9ec83c4
Title: Track
*/

import React from "react";
import { useGLTF } from "@react-three/drei";
import { RigidBody } from "@react-three/rapier";
import { useStore } from "./store/store";

export function Model(props) {
  const { nodes, materials } = useGLTF("/models/track.glb");
  const { setLapNotValidated } = useStore();
  return (
    <group {...props} dispose={null}>
      <group scale={0.013} position={[0, -0.49, 0]}>

          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Plane_TRACK_0.geometry}
          >
            <meshStandardMaterial color={"#1e1e1e"} roughness={1} dithering={true}/>
          </mesh>
          <RigidBody type={"fixed"} sensor colliders={"trimesh"} onIntersectionEnter={() => {
            setLapNotValidated(true);
            
          }}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Plane_FLOOR_0.geometry}
            material={materials.FLOOR}
          />

          </RigidBody>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Plane_ROCK_0.geometry}
            material={materials.ROCK}
          />
          <RigidBody type={"fixed"} colliders={"trimesh"}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Plane_REDKERB_0.geometry}
            material={materials.REDKERB}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Plane_WHITEKERB_0.geometry}
            material={materials.WHITEKERB}
          />
        </RigidBody>
      </group>
    </group>
  );
}

useGLTF.preload("/models/track.glb");
